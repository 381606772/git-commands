========================================================本地操作命令=========================================

# 创建版本库
$ git clone  <url>                     # 克隆远程版本库
$ git init                             # 初始化本地库



# 修改和提交
$ git status                           # 查看状态
$ git diff                             # 查看变更内容
$ git add .                            # 跟踪所有改动过的文件
$ git add <file>                       # 跟踪指定的文件
$ git mv <old> <new>                   # 文件改名
$ git rm <file>                        # 删除文件
$ git rm --cached <file>               # 停止跟踪文件但是不删除
$ git rm -rf folder                    # 停止跟踪并删除文件夹
$ git commit -m "commit message"       # 提交所有更新过的文件
$ git commit -amend                    # 修改最后一个提交



# 查看提交历史
$ git log                              # 查看提交历史
$ git log -p <file>                    # 查看指定文件的提交历史
$ git blame <file>                     # 以列表方式查看指定文件的提交历史



# 撤销
$ git reset --hard HEAD                # 撤销工作目录中所有未提交文件的修改内容
$ git checkout HEAD <file>             # 撤销指定的未提交文件的修改内容
$ git revert <commit>                  # 撤销指定的提交



# 分支与标签
$ git branch                           # 显示所有本地分支
$ git branch      <branchName>         # 创建新分支
$ git checkout    <branchName>         # 切换到指定分支或标签
$ git checkout -b <branchName>         # 创建并切换到分支
$ git branch   -D <branchName>         # 删除本地分支



# 合并
$ git merge <branch>                   # 合并指定分支到当前分支
$ git rebase <branch>                  # 衍合指定分支到当前分支




========================================================远程操作命令=========================================

# 远程操作
$ git remote -v                            # 查看远程版本库信息
$ git remote show    <remote>              # 查看指定远程版本库信息
$ git remote add     <aliasName> <url>     # 创建远程版本库别名
$ git remote remove  <aliasName>           # 删除远程版本库别名



$ git pull <远程仓库地址/别名> <远程分支名>:<本地分支名>
$ git push <远程仓库地址/别名> <本地分支名>:<远程分支名>
                                  from         to


